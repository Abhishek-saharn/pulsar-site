"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[2175],{3905:(e,a,t)=>{t.d(a,{Zo:()=>s,kt:()=>h});var n=t(67294);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var m=n.createContext({}),p=function(e){var a=n.useContext(m),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},s=function(e){var a=p(e.components);return n.createElement(m.Provider,{value:a},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,i=e.originalType,m=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=p(t),u=l,h=c["".concat(m,".").concat(u)]||c[u]||d[u]||i;return t?n.createElement(h,r(r({ref:a},s),{},{components:t})):n.createElement(h,r({ref:a},s))}));function h(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var i=t.length,r=new Array(i);r[0]=u;var o={};for(var m in a)hasOwnProperty.call(a,m)&&(o[m]=a[m]);o.originalType=e,o[c]="string"==typeof e?e:l,r[1]=o;for(var p=2;p<i;p++)r[p]=t[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},85162:(e,a,t)=>{t.d(a,{Z:()=>r});var n=t(67294),l=t(86010);const i={tabItem:"tabItem_Ymn6"};function r(e){let{children:a,hidden:t,className:r}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(i.tabItem,r),hidden:t},a)}},65488:(e,a,t)=>{t.d(a,{Z:()=>d});var n=t(87462),l=t(67294),i=t(86010),r=t(72389),o=t(67392),m=t(7094),p=t(12466);const s={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function c(e){const{lazy:a,block:t,defaultValue:r,values:c,groupId:d,className:u}=e,h=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=c??h.map((e=>{let{props:{value:a,label:t,attributes:n}}=e;return{value:a,label:t,attributes:n}})),N=(0,o.l)(k,((e,a)=>e.value===a.value));if(N.length>0)throw new Error(`Docusaurus error: Duplicate values "${N.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===r?r:r??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==g&&!k.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:b,setTabGroupChoices:y}=(0,m.U)(),[f,v]=(0,l.useState)(g),T=[],{blockElementScrollPositionUntilNextRender:S}=(0,p.o5)();if(null!=d){const e=b[d];null!=e&&e!==f&&k.some((a=>a.value===e))&&v(e)}const I=e=>{const a=e.currentTarget,t=T.indexOf(a),n=k[t].value;n!==f&&(S(a),v(n),null!=d&&y(d,String(n)))},A=e=>{let a=null;switch(e.key){case"Enter":I(e);break;case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;a=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;a=T[t]??T[T.length-1];break}}a?.focus()};return l.createElement("div",{className:(0,i.Z)("tabs-container",s.tabList)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},u)},k.map((e=>{let{value:a,label:t,attributes:r}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:f===a?0:-1,"aria-selected":f===a,key:a,ref:e=>T.push(e),onKeyDown:A,onClick:I},r,{className:(0,i.Z)("tabs__item",s.tabItem,r?.className,{"tabs__item--active":f===a})}),t??a)}))),a?(0,l.cloneElement)(h.filter((e=>e.props.value===f))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},h.map(((e,a)=>(0,l.cloneElement)(e,{key:a,hidden:e.props.value!==f})))))}function d(e){const a=(0,r.Z)();return l.createElement(c,(0,n.Z)({key:String(a)},e))}},98017:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>m,default:()=>h,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var n=t(87462),l=(t(67294),t(3905)),i=t(65488),r=t(85162);const o={id:"schema-manage",title:"Manage schema",sidebar_label:"Manage schema"},m=void 0,p={unversionedId:"schema-manage",id:"version-2.5.2/schema-manage",title:"Manage schema",description:"This guide demonstrates the ways to manage schemas:",source:"@site/versioned_docs/version-2.5.2/schema-manage.md",sourceDirName:".",slug:"/schema-manage",permalink:"/docs/2.5.2/schema-manage",draft:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-2.5.2/schema-manage.md",tags:[],version:"2.5.2",frontMatter:{id:"schema-manage",title:"Manage schema",sidebar_label:"Manage schema"},sidebar:"version-2.5.2/docsSidebar",previous:{title:"Schema evolution and compatibility",permalink:"/docs/2.5.2/schema-evolution-compatibility"},next:{title:"Overview",permalink:"/docs/2.5.2/functions-overview"}},s={},c=[{value:"Schema AutoUpdate",id:"schema-autoupdate",level:2},{value:"AutoUpdate for producer",id:"autoupdate-for-producer",level:3},{value:"AutoUpdate for consumer",id:"autoupdate-for-consumer",level:3},{value:"Manage AutoUpdate strategy",id:"manage-autoupdate-strategy",level:3},{value:"Enable AutoUpdate",id:"enable-autoupdate",level:4},{value:"Disable AutoUpdate",id:"disable-autoupdate",level:4},{value:"Adjust compatibility",id:"adjust-compatibility",level:4},{value:"Schema validation",id:"schema-validation",level:3},{value:"Enable schema validation",id:"enable-schema-validation",level:4},{value:"Disable schema validation",id:"disable-schema-validation",level:4},{value:"Schema manual management",id:"schema-manual-management",level:2},{value:"Upload a schema",id:"upload-a-schema",level:3},{value:"Get a schema (latest)",id:"get-a-schema-latest",level:3},{value:"Get a schema (specific)",id:"get-a-schema-specific",level:3},{value:"Extract a schema",id:"extract-a-schema",level:3},{value:"Delete a schema",id:"delete-a-schema",level:3},{value:"Custom schema storage",id:"custom-schema-storage",level:2},{value:"Implement",id:"implement",level:3},{value:"SchemaStorage interface",id:"schemastorage-interface",level:4},{value:"SchemaStorageFactory interface",id:"schemastoragefactory-interface",level:4},{value:"Deploy",id:"deploy",level:3},{value:"Set schema compatibility check strategy",id:"set-schema-compatibility-check-strategy",level:2},{value:"Topic level",id:"topic-level",level:3},{value:"Namespace level",id:"namespace-level",level:3},{value:"Broker level",id:"broker-level",level:3}],d={toc:c},u="wrapper";function h(e){let{components:a,...o}=e;return(0,l.kt)(u,(0,n.Z)({},d,o,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This guide demonstrates the ways to manage schemas:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Automatically"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#schema-autoupdate"},"Schema AutoUpdate")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Manually"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#schema-manual-management"},"Schema manual management"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#custom-schema-storage"},"Custom schema storage")))))),(0,l.kt)("h2",{id:"schema-autoupdate"},"Schema AutoUpdate"),(0,l.kt)("p",null,"If a schema passes the schema compatibility check, Pulsar producer automatically updates this schema to the topic it produces by default."),(0,l.kt)("h3",{id:"autoupdate-for-producer"},"AutoUpdate for producer"),(0,l.kt)("p",null,"For a producer, the ",(0,l.kt)("inlineCode",{parentName:"p"},"AutoUpdate")," happens in the following cases:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If a ",(0,l.kt)("strong",{parentName:"p"},"topic doesn\u2019t have a schema"),", Pulsar registers a schema automatically.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If a ",(0,l.kt)("strong",{parentName:"p"},"topic has a schema"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If a ",(0,l.kt)("strong",{parentName:"p"},"producer doesn\u2019t carry a schema"),":")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If ",(0,l.kt)("inlineCode",{parentName:"p"},"isSchemaValidationEnforced")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"schemaValidationEnforced")," is ",(0,l.kt)("strong",{parentName:"p"},"disabled")," in the namespace to which the topic belongs, the producer is allowed to connect to the topic and produce data.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If ",(0,l.kt)("inlineCode",{parentName:"p"},"isSchemaValidationEnforced")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"schemaValidationEnforced")," is ",(0,l.kt)("strong",{parentName:"p"},"enabled")," in the namespace to which the topic belongs, the producer is rejected and disconnected.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If a ",(0,l.kt)("strong",{parentName:"p"},"producer carries a schema"),":"))),(0,l.kt)("p",{parentName:"li"},"A broker performs the compatibility check based on the configured compatibility check strategy of the namespace to which the topic belongs."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If the schema is registered, a producer is connected to a broker.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If the schema is not registered:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If ",(0,l.kt)("inlineCode",{parentName:"p"},"isAllowAutoUpdateSchema")," sets to ",(0,l.kt)("strong",{parentName:"p"},"false"),", the producer is rejected to connect to a broker.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If ",(0,l.kt)("inlineCode",{parentName:"p"},"isAllowAutoUpdateSchema")," sets to ",(0,l.kt)("strong",{parentName:"p"},"true"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If the schema passes the compatibility check, then the broker registers a new schema automatically for the topic and the producer is connected.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If the schema does not pass the compatibility check, then the broker does not register a schema and the producer is rejected to connect to a broker."))))))))),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"AutoUpdate Producer",src:t(42529).Z,width:"1278",height:"1228"})),(0,l.kt)("h3",{id:"autoupdate-for-consumer"},"AutoUpdate for consumer"),(0,l.kt)("p",null,"For a consumer, the ",(0,l.kt)("inlineCode",{parentName:"p"},"AutoUpdate")," happens in the following cases:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If a ",(0,l.kt)("strong",{parentName:"p"},"consumer connects to a topic without a schema")," (which means the consumer receiving raw bytes), the consumer can connect to the topic successfully without doing any compatibility check.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If a ",(0,l.kt)("strong",{parentName:"p"},"consumer connects to a topic with a schema"),"."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If a topic does not have all of them (a schema/data/a local consumer and a local producer):"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If ",(0,l.kt)("inlineCode",{parentName:"p"},"isAllowAutoUpdateSchema")," sets to ",(0,l.kt)("strong",{parentName:"p"},"true"),", then the consumer registers a schema and it is connected to a broker.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If ",(0,l.kt)("inlineCode",{parentName:"p"},"isAllowAutoUpdateSchema")," sets to ",(0,l.kt)("strong",{parentName:"p"},"false"),", then the consumer is rejected to connect to a broker.")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If a topic has one of them (a schema/data/a local consumer and a local producer), then the schema compatibility check is performed."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If the schema passes the compatibility check, then the consumer is connected to the broker.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If the schema does not pass the compatibility check, then the consumer is rejected to connect to the broker."))))))),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"AutoUpdate Consumer",src:t(14175).Z,width:"1404",height:"1298"})),(0,l.kt)("h3",{id:"manage-autoupdate-strategy"},"Manage AutoUpdate strategy"),(0,l.kt)("p",null,"You can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"pulsar-admin")," command to manage the ",(0,l.kt)("inlineCode",{parentName:"p"},"AutoUpdate")," strategy as below:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#enable-autoupdate"},"Enable AutoUpdate"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#disable-autoupdate"},"Disable AutoUpdate"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#adjust-compatibility"},"Adjust compatibility")))),(0,l.kt)("h4",{id:"enable-autoupdate"},"Enable AutoUpdate"),(0,l.kt)("p",null,"To enable ",(0,l.kt)("inlineCode",{parentName:"p"},"AutoUpdate")," on a namespace, you can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"pulsar-admin")," command."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\nbin/pulsar-admin namespaces set-is-allow-auto-update-schema --enable tenant/namespace\n\n")),(0,l.kt)("h4",{id:"disable-autoupdate"},"Disable AutoUpdate"),(0,l.kt)("p",null,"To disable ",(0,l.kt)("inlineCode",{parentName:"p"},"AutoUpdate")," on a namespace, you can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"pulsar-admin")," command."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\nbin/pulsar-admin namespaces set-is-allow-auto-update-schema --disable tenant/namespace\n\n")),(0,l.kt)("p",null,"Once the ",(0,l.kt)("inlineCode",{parentName:"p"},"AutoUpdate")," is disabled, you can only register a new schema using the ",(0,l.kt)("inlineCode",{parentName:"p"},"pulsar-admin")," command."),(0,l.kt)("h4",{id:"adjust-compatibility"},"Adjust compatibility"),(0,l.kt)("p",null,"To adjust the schema compatibility level on a namespace, you can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"pulsar-admin")," command."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\nbin/pulsar-admin namespaces set-schema-compatibility-strategy --compatibility <compatibility-level> tenant/namespace\n\n")),(0,l.kt)("h3",{id:"schema-validation"},"Schema validation"),(0,l.kt)("p",null,"By default, ",(0,l.kt)("inlineCode",{parentName:"p"},"schemaValidationEnforced")," is ",(0,l.kt)("strong",{parentName:"p"},"disabled")," for producers:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"This means a producer without a schema can produce any kind of messages to a topic with schemas, which may result in producing trash data to the topic.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"This allows non-java language clients that don\u2019t support schema can produce messages to a topic with schemas."))),(0,l.kt)("p",null,"However, if you want a stronger guarantee on the topics with schemas, you can enable ",(0,l.kt)("inlineCode",{parentName:"p"},"schemaValidationEnforced")," across the whole cluster or on a per-namespace basis."),(0,l.kt)("h4",{id:"enable-schema-validation"},"Enable schema validation"),(0,l.kt)("p",null,"To enable ",(0,l.kt)("inlineCode",{parentName:"p"},"schemaValidationEnforced")," on a namespace, you can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"pulsar-admin")," command."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\nbin/pulsar-admin namespaces set-schema-validation-enforce --enable tenant/namespace\n\n")),(0,l.kt)("h4",{id:"disable-schema-validation"},"Disable schema validation"),(0,l.kt)("p",null,"To disable ",(0,l.kt)("inlineCode",{parentName:"p"},"schemaValidationEnforced")," on a namespace, you can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"pulsar-admin")," command."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\nbin/pulsar-admin namespaces set-schema-validation-enforce --disable tenant/namespace\n\n")),(0,l.kt)("h2",{id:"schema-manual-management"},"Schema manual management"),(0,l.kt)("p",null,"To manage schemas, you can use one of the following methods."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Method"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Admin CLI"),(0,l.kt)("li",null)),(0,l.kt)("td",{parentName:"tr",align:null},"You can use the ",(0,l.kt)("inlineCode",{parentName:"td"},"pulsar-admin")," tool to manage Pulsar schemas, brokers, clusters, sources, sinks, topics, tenants and so on. For more information about how to use the ",(0,l.kt)("inlineCode",{parentName:"td"},"pulsar-admin")," tool, see ",(0,l.kt)("a",{parentName:"td",href:"/docs/2.5.2/reference-pulsar-admin"},"here"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"REST API"),(0,l.kt)("li",null)),(0,l.kt)("td",{parentName:"tr",align:null},"Pulsar exposes schema related management API in Pulsar\u2019s admin RESTful API. You can access the admin RESTful endpoint directly to manage schemas. For more information about how to use the Pulsar REST API, see ",(0,l.kt)("a",{parentName:"td",href:"http://pulsar.apache.org/admin-rest-api/"},"here"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Java Admin API"),(0,l.kt)("li",null)),(0,l.kt)("td",{parentName:"tr",align:null},"Pulsar provides Java admin library.")))),(0,l.kt)("h3",{id:"upload-a-schema"},"Upload a schema"),(0,l.kt)("p",null,"To upload (register) a new schema for a topic, you can use one of the following methods."),(0,l.kt)(i.Z,{defaultValue:"Admin CLI",values:[{label:"Admin CLI",value:"Admin CLI"},{label:"REST API",value:"REST API"},{label:"Java Admin API",value:"Java Admin API"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"Admin CLI",mdxType:"TabItem"},(0,l.kt)("p",null,"Use the ",(0,l.kt)("inlineCode",{parentName:"p"},"upload")," subcommand."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin schemas upload --filename <schema-definition-file> <topic-name>\n\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"schema-definition-file")," is in JSON format."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'\n{\n    "type": "<schema-type>",\n    "schema": "<an-utf8-encoded-string-of-schema-definition-data>",\n    "properties": {} // the properties associated with the schema\n}\n\n')),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"schema-definition-file")," includes the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"type")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema type.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"schema")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema definition data, which is encoded in UTF 8 charset. ",(0,l.kt)("li",null,"If the schema is a ",(0,l.kt)("strong",{parentName:"td"},"primitive")," schema, this field should be blank. "),(0,l.kt)("li",null,"If the schema is a ",(0,l.kt)("strong",{parentName:"td"},"struct")," schema, this field should be a JSON string of the Avro schema definition. "))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"properties")),(0,l.kt)("td",{parentName:"tr",align:null},"The additional properties associated with the schema.")))),(0,l.kt)("p",null,"Here are examples of the ",(0,l.kt)("inlineCode",{parentName:"p"},"schema-definition-file")," for a JSON schema."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 1")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'\n{\n    "type": "JSON",\n    "schema": "{\\"type\\":\\"record\\",\\"name\\":\\"User\\",\\"namespace\\":\\"com.foo\\",\\"fields\\":[{\\"name\\":\\"file1\\",\\"type\\":[\\"null\\",\\"string\\"],\\"default\\":null},{\\"name\\":\\"file2\\",\\"type\\":\\"string\\",\\"default\\":null},{\\"name\\":\\"file3\\",\\"type\\":[\\"null\\",\\"string\\"],\\"default\\":\\"dfdf\\"}]}",\n    "properties": {}\n}\n\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 2")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'\n{\n    "type": "STRING",\n    "schema": "",\n    "properties": {\n        "key1": "value1"\n    }\n}\n\n'))),(0,l.kt)(r.Z,{value:"REST API",mdxType:"TabItem"},(0,l.kt)("p",null,"Send a ",(0,l.kt)("inlineCode",{parentName:"p"},"POST")," request to this endpoint: ",(0,l.kt)("a",{parentName:"p",href:"https://pulsar.apache.org/admin-rest-api?version=2.5.2a&apiversion=v2#operation/uploadSchem"},"POST /admin/v2/schemas/:tenant/:namespace/:topic/schema")),(0,l.kt)("p",null,"The post payload is in JSON format."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'\n{\n    "type": "<schema-type>",\n    "schema": "<an-utf8-encoded-string-of-schema-definition-data>",\n    "properties": {} // the properties associated with the schema\n}\n\n')),(0,l.kt)("p",null,"The post payload includes the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"type")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema type.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"schema")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema definition data, which is encoded in UTF 8 charset. ",(0,l.kt)("li",null,"If the schema is a ",(0,l.kt)("strong",{parentName:"td"},"primitive")," schema, this field should be blank. "),(0,l.kt)("li",null,"If the schema is a ",(0,l.kt)("strong",{parentName:"td"},"struct")," schema, this field should be a JSON string of the Avro schema definition. "))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"properties")),(0,l.kt)("td",{parentName:"tr",align:null},"The additional properties associated with the schema."))))),(0,l.kt)(r.Z,{value:"Java Admin API",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"\nvoid createSchema(String topic, PostSchemaPayload schemaPayload)\n\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"PostSchemaPayload")," includes the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"type")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema type.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"schema")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema definition data, which is encoded in UTF 8 charset. ",(0,l.kt)("li",null,"If the schema is a ",(0,l.kt)("strong",{parentName:"td"},"primitive")," schema, this field should be blank. "),(0,l.kt)("li",null,"If the schema is a ",(0,l.kt)("strong",{parentName:"td"},"struct")," schema, this field should be a JSON string of the Avro schema definition. "))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"properties")),(0,l.kt)("td",{parentName:"tr",align:null},"The additional properties associated with the schema.")))),(0,l.kt)("p",null,"Here is an example of ",(0,l.kt)("inlineCode",{parentName:"p"},"PostSchemaPayload"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'\nPulsarAdmin admin = \u2026;\n\nPostSchemaPayload payload = new PostSchemaPayload();\npayload.setType("INT8");\npayload.setSchema("");\n\nadmin.createSchema("my-tenant/my-ns/my-topic", payload);\n\n')))),(0,l.kt)("h3",{id:"get-a-schema-latest"},"Get a schema (latest)"),(0,l.kt)("p",null,"To get the latest schema for a topic, you can use one of the following methods."),(0,l.kt)(i.Z,{defaultValue:"Admin CLI",values:[{label:"Admin CLI",value:"Admin CLI"},{label:"REST API",value:"REST API"},{label:"Java Admin API",value:"Java Admin API"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"Admin CLI",mdxType:"TabItem"},(0,l.kt)("p",null,"Use the ",(0,l.kt)("inlineCode",{parentName:"p"},"get")," subcommand."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n$ pulsar-admin schemas get <topic-name>\n\n{\n    "version": 0,\n    "type": "String",\n    "timestamp": 0,\n    "data": "string",\n    "properties": {\n        "property1": "string",\n        "property2": "string"\n    }\n}\n\n'))),(0,l.kt)(r.Z,{value:"REST API",mdxType:"TabItem"},(0,l.kt)("p",null,"Send a ",(0,l.kt)("inlineCode",{parentName:"p"},"GET")," request to this endpoint: ",(0,l.kt)("a",{parentName:"p",href:"https://pulsar.apache.org/admin-rest-api?version=2.5.2a&apiversion=v2#operation/getSchem"},"GET /admin/v2/schemas/:tenant/:namespace/:topic/schema")),(0,l.kt)("p",null,"Here is an example of a response, which is returned in JSON format."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'\n{\n    "version": "<the-version-number-of-the-schema>",\n    "type": "<the-schema-type>",\n    "timestamp": "<the-creation-timestamp-of-the-version-of-the-schema>",\n    "data": "<an-utf8-encoded-string-of-schema-definition-data>",\n    "properties": {} // the properties associated with the schema\n}\n\n')),(0,l.kt)("p",null,"The response includes the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"version")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema version, which is a long number.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"type")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema type.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"timestamp")),(0,l.kt)("td",{parentName:"tr",align:null},"The timestamp of creating this version of schema.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"data")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema definition data, which is encoded in UTF 8 charset. ",(0,l.kt)("li",null,"If the schema is a "),(0,l.kt)("strong",{parentName:"td"},"primitive"),(0,l.kt)("li",null,"schema, this field should be blank. "),(0,l.kt)("li",null,"If the schema is a "),(0,l.kt)("strong",{parentName:"td"},"struct"),(0,l.kt)("li",null,"schema, this field should be a JSON string of the Avro schema definition. "))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"properties")),(0,l.kt)("td",{parentName:"tr",align:null},"The additional properties associated with the schema."))))),(0,l.kt)(r.Z,{value:"Java Admin API",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"\nSchemaInfo createSchema(String topic)\n\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"SchemaInfo")," includes the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"name")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"type")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema type.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"schema")),(0,l.kt)("td",{parentName:"tr",align:null},"A byte array of the schema definition data, which is encoded in UTF 8 charset. ",(0,l.kt)("li",null,"If the schema is a "),(0,l.kt)("strong",{parentName:"td"},"primitive"),(0,l.kt)("li",null,"schema, this byte array should be empty. "),(0,l.kt)("li",null,"If the schema is a "),(0,l.kt)("strong",{parentName:"td"},"struct"),(0,l.kt)("li",null,"schema, this field should be a JSON string of the Avro schema definition converted to a byte array. "))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"properties")),(0,l.kt)("td",{parentName:"tr",align:null},"The additional properties associated with the schema.")))),(0,l.kt)("p",null,"Here is an example of ",(0,l.kt)("inlineCode",{parentName:"p"},"SchemaInfo"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'\nPulsarAdmin admin = \u2026;\n\nSchemaInfo si = admin.getSchema("my-tenant/my-ns/my-topic");\n\n')))),(0,l.kt)("h3",{id:"get-a-schema-specific"},"Get a schema (specific)"),(0,l.kt)("p",null,"To get a specific version of a schema, you can use one of the following methods."),(0,l.kt)(i.Z,{defaultValue:"Admin CLI",values:[{label:"Admin CLI",value:"Admin CLI"},{label:"REST API",value:"REST API"},{label:"Java Admin API",value:"Java Admin API"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"Admin CLI",mdxType:"TabItem"},(0,l.kt)("p",null,"Use the ",(0,l.kt)("inlineCode",{parentName:"p"},"get")," subcommand."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin schemas get <topic-name> --version=<version>\n\n"))),(0,l.kt)(r.Z,{value:"REST API",mdxType:"TabItem"},(0,l.kt)("p",null,"Send a ",(0,l.kt)("inlineCode",{parentName:"p"},"GET")," request to a schema endpoint: ",(0,l.kt)("a",{parentName:"p",href:"https://pulsar.apache.org/admin-rest-api?version=2.5.2a&apiversion=v2#operation/getSchem"},"GET /admin/v2/schemas/:tenant/:namespace/:topic/schema/:version")),(0,l.kt)("p",null,"Here is an example of a response, which is returned in JSON format."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'\n{\n    "version": "<the-version-number-of-the-schema>",\n    "type": "<the-schema-type>",\n    "timestamp": "<the-creation-timestamp-of-the-version-of-the-schema>",\n    "data": "<an-utf8-encoded-string-of-schema-definition-data>",\n    "properties": {} // the properties associated with the schema\n}\n\n')),(0,l.kt)("p",null,"The response includes the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"version")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema version, which is a long number.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"type")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema type.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"timestamp")),(0,l.kt)("td",{parentName:"tr",align:null},"The timestamp of creating this version of schema.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"data")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema definition data, which is encoded in UTF 8 charset. ",(0,l.kt)("li",null,"If the schema is a "),(0,l.kt)("strong",{parentName:"td"},"primitive"),(0,l.kt)("li",null,"schema, this field should be blank. "),(0,l.kt)("li",null,"If the schema is a "),(0,l.kt)("strong",{parentName:"td"},"struct"),(0,l.kt)("li",null,"schema, this field should be a JSON string of the Avro schema definition. "))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"properties")),(0,l.kt)("td",{parentName:"tr",align:null},"The additional properties associated with the schema."))))),(0,l.kt)(r.Z,{value:"Java Admin API",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"\nSchemaInfo createSchema(String topic, long version)\n\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"SchemaInfo")," includes the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"name")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"type")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema type.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"schema")),(0,l.kt)("td",{parentName:"tr",align:null},"A byte array of the schema definition data, which is encoded in UTF 8. ",(0,l.kt)("li",null,"If the schema is a "),(0,l.kt)("strong",{parentName:"td"},"primitive"),(0,l.kt)("li",null,"schema, this byte array should be empty. "),(0,l.kt)("li",null,"If the schema is a "),(0,l.kt)("strong",{parentName:"td"},"struct"),(0,l.kt)("li",null,"schema, this field should be a JSON string of the Avro schema definition converted to a byte array. "))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"properties")),(0,l.kt)("td",{parentName:"tr",align:null},"The additional properties associated with the schema.")))),(0,l.kt)("p",null,"Here is an example of ",(0,l.kt)("inlineCode",{parentName:"p"},"SchemaInfo"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'\nPulsarAdmin admin = \u2026;\n\nSchemaInfo si = admin.getSchema("my-tenant/my-ns/my-topic", 1L);\n\n')))),(0,l.kt)("h3",{id:"extract-a-schema"},"Extract a schema"),(0,l.kt)("p",null,"To provide a schema via a topic, you can use the following method."),(0,l.kt)(i.Z,{defaultValue:"Admin CLI",values:[{label:"Admin CLI",value:"Admin CLI"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"Admin CLI",mdxType:"TabItem"},(0,l.kt)("p",null,"Use the ",(0,l.kt)("inlineCode",{parentName:"p"},"extract")," subcommand."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin schemas extract --classname <class-name> --jar <jar-path> --type <type-name>\n\n")))),(0,l.kt)("h3",{id:"delete-a-schema"},"Delete a schema"),(0,l.kt)("p",null,"To delete a schema for a topic, you can use one of the following methods."),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"In any case, the ",(0,l.kt)("strong",{parentName:"p"},"delete")," action deletes ",(0,l.kt)("strong",{parentName:"p"},"all versions")," of a schema registered for a topic.")),(0,l.kt)(i.Z,{defaultValue:"Admin CLI",values:[{label:"Admin CLI",value:"Admin CLI"},{label:"REST API",value:"REST API"},{label:"Java Admin API",value:"Java Admin API"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"Admin CLI",mdxType:"TabItem"},(0,l.kt)("p",null,"Use the ",(0,l.kt)("inlineCode",{parentName:"p"},"delete")," subcommand."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin schemas delete <topic-name>\n\n"))),(0,l.kt)(r.Z,{value:"REST API",mdxType:"TabItem"},(0,l.kt)("p",null,"Send a ",(0,l.kt)("inlineCode",{parentName:"p"},"DELETE")," request to a schema endpoint: ",(0,l.kt)("a",{parentName:"p",href:"https://pulsar.apache.org/admin-rest-api?version=2.5.2&apiversion=v2#operation/deleteSchema"},"DELETE /admin/v2/schemas/:tenant/:namespace/:topic/schema")),(0,l.kt)("p",null,"Here is an example of a response, which is returned in JSON format."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'\n{\n    "version": "<the-latest-version-number-of-the-schema>",\n}\n\n')),(0,l.kt)("p",null,"The response includes the following field:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"version")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema version, which is a long number."))))),(0,l.kt)(r.Z,{value:"Java Admin API",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"\nvoid deleteSchema(String topic)\n\n")),(0,l.kt)("p",null,"Here is an example of deleting a schema."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'\nPulsarAdmin admin = \u2026;\n\nadmin.deleteSchema("my-tenant/my-ns/my-topic");\n\n')))),(0,l.kt)("h2",{id:"custom-schema-storage"},"Custom schema storage"),(0,l.kt)("p",null,"By default, Pulsar stores various data types of schemas in ",(0,l.kt)("a",{parentName:"p",href:"https://bookkeeper.apache.org"},"Apache BookKeeper")," deployed alongside Pulsar."),(0,l.kt)("p",null,"However, you can use another storage system if needed."),(0,l.kt)("h3",{id:"implement"},"Implement"),(0,l.kt)("p",null,"To use a non-default (non-BookKeeper) storage system for Pulsar schemas, you need to implement the following Java interfaces:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#schemastorage-interface"},"SchemaStorage interface"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#schemastoragefactory-interface"},"SchemaStorageFactory interface")))),(0,l.kt)("h4",{id:"schemastorage-interface"},"SchemaStorage interface"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"SchemaStorage")," interface has the following methods:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"\npublic interface SchemaStorage {\n    // How schemas are updated\n    CompletableFuture<SchemaVersion> put(String key, byte[] value, byte[] hash);\n\n    // How schemas are fetched from storage\n    CompletableFuture<StoredSchema> get(String key, SchemaVersion version);\n\n    // How schemas are deleted\n    CompletableFuture<SchemaVersion> delete(String key);\n\n    // Utility method for converting a schema version byte array to a SchemaVersion object\n    SchemaVersion versionFromBytes(byte[] version);\n\n    // Startup behavior for the schema storage client\n    void start() throws Exception;\n\n    // Shutdown behavior for the schema storage client\n    void close() throws Exception;\n}\n\n")),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"For a complete example of ",(0,l.kt)("strong",{parentName:"p"},"schema storage")," implementation, see ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/apache/pulsar/blob/master/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/schema/BookkeeperSchemaStorage.java"},"BookKeeperSchemaStorage")," class.")),(0,l.kt)("h4",{id:"schemastoragefactory-interface"},"SchemaStorageFactory interface"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"SchemaStorageFactory")," interface has the following method:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"\npublic interface SchemaStorageFactory {\n    @NotNull\n    SchemaStorage create(PulsarService pulsar) throws Exception;\n}\n\n")),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"For a complete example of ",(0,l.kt)("strong",{parentName:"p"},"schema storage factory")," implementation, see ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/apache/pulsar/blob/master/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/schema/BookkeeperSchemaStorageFactory.java"},"BookKeeperSchemaStorageFactory")," class.")),(0,l.kt)("h3",{id:"deploy"},"Deploy"),(0,l.kt)("p",null,"To use your custom schema storage implementation, perform the following steps."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Package the implementation in a ",(0,l.kt)("a",{parentName:"p",href:"https://docs.oracle.com/javase/tutorial/deployment/jar/basicsindex.html"},"JAR")," file.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Add the JAR file to the ",(0,l.kt)("inlineCode",{parentName:"p"},"lib")," folder in your Pulsar binary or source distribution.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Change the ",(0,l.kt)("inlineCode",{parentName:"p"},"schemaRegistryStorageClassName")," configuration in ",(0,l.kt)("inlineCode",{parentName:"p"},"broker.conf")," to your custom factory class.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Start Pulsar."))),(0,l.kt)("h2",{id:"set-schema-compatibility-check-strategy"},"Set schema compatibility check strategy"),(0,l.kt)("p",null,"You can set ",(0,l.kt)("a",{parentName:"p",href:"/docs/2.5.2/schema-evolution-compatibility#schema-compatibility-check-strategy"},"schema compatibility check strategy")," at the topic, namespace or broker level."),(0,l.kt)("p",null,"The schema compatibility check strategy set at different levels has priority: topic level > namespace level > broker level."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If you set the strategy at both topic and namespace level, it uses the topic-level strategy.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If you set the strategy at both namespace and broker level, it uses the namespace-level strategy.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If you do not set the strategy at any level, it uses the ",(0,l.kt)("inlineCode",{parentName:"p"},"FULL")," strategy. For all available values, see ",(0,l.kt)("a",{parentName:"p",href:"/docs/2.5.2/schema-evolution-compatibility#schema-compatibility-check-strategy"},"here"),"."))),(0,l.kt)("h3",{id:"topic-level"},"Topic level"),(0,l.kt)("p",null,"To set a schema compatibility check strategy at the topic level, use one of the following methods."),(0,l.kt)(i.Z,{defaultValue:"Admin CLI",values:[{label:"Admin CLI",value:"Admin CLI"},{label:"REST API",value:"REST API"},{label:"Java Admin API",value:"Java Admin API"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"Admin CLI",mdxType:"TabItem"},(0,l.kt)("p",null,"Use the ",(0,l.kt)("a",{parentName:"p",href:"https://pulsar.apache.org/tools/pulsar-admin/"},(0,l.kt)("inlineCode",{parentName:"a"},"pulsar-admin topicPolicies set-schema-compatibility-strategy"))," command."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"\npulsar-admin topicPolicies set-schema-compatibility-strategy <strategy> <topicName>\n\n"))),(0,l.kt)(r.Z,{value:"REST API",mdxType:"TabItem"},(0,l.kt)("p",null,"Send a ",(0,l.kt)("inlineCode",{parentName:"p"},"PUT")," request to this endpoint: ",(0,l.kt)("a",{parentName:"p",href:"https://pulsar.apache.org/admin-rest-api?version=2.5.2&apiversion=v2#operation/schemaCompatibilityStrategy"},"PUT /admin/v2/topics/:tenant/:namespace/:topic"))),(0,l.kt)(r.Z,{value:"Java Admin API",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"\nvoid setSchemaCompatibilityStrategy(String topic, SchemaCompatibilityStrategy strategy)\n\n")),(0,l.kt)("p",null,"Here is an example of setting a schema compatibility check strategy at the topic level."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'\nPulsarAdmin admin = \u2026;\n\nadmin.topicPolicies().setSchemaCompatibilityStrategy("my-tenant/my-ns/my-topic", SchemaCompatibilityStrategy.ALWAYS_INCOMPATIBLE);\n\n')))),(0,l.kt)("br",null),"To get the topic-level schema compatibility check strategy, use one of the following methods.",(0,l.kt)(i.Z,{defaultValue:"Admin CLI",values:[{label:"Admin CLI",value:"Admin CLI"},{label:"REST API",value:"REST API"},{label:"Java Admin API",value:"Java Admin API"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"Admin CLI",mdxType:"TabItem"},(0,l.kt)("p",null,"Use the ",(0,l.kt)("a",{parentName:"p",href:"https://pulsar.apache.org/tools/pulsar-admin/"},(0,l.kt)("inlineCode",{parentName:"a"},"pulsar-admin topicPolicies get-schema-compatibility-strategy"))," command."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"\npulsar-admin topicPolicies get-schema-compatibility-strategy <topicName>\n\n"))),(0,l.kt)(r.Z,{value:"REST API",mdxType:"TabItem"},(0,l.kt)("p",null,"Send a ",(0,l.kt)("inlineCode",{parentName:"p"},"GET")," request to this endpoint: ",(0,l.kt)("a",{parentName:"p",href:"https://pulsar.apache.org/admin-rest-api?version=2.5.2&apiversion=v2#operation/schemaCompatibilityStrategy"},"GET /admin/v2/topics/:tenant/:namespace/:topic"))),(0,l.kt)(r.Z,{value:"Java Admin API",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"\nSchemaCompatibilityStrategy getSchemaCompatibilityStrategy(String topic, boolean applied)\n\n")),(0,l.kt)("p",null,"Here is an example of getting the topic-level schema compatibility check strategy."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'\nPulsarAdmin admin = \u2026;\n\n// get the current applied schema compatibility strategy\nadmin.topicPolicies().getSchemaCompatibilityStrategy("my-tenant/my-ns/my-topic", true);\n\n// only get the schema compatibility strategy from topic policies\nadmin.topicPolicies().getSchemaCompatibilityStrategy("my-tenant/my-ns/my-topic", false);\n\n')))),(0,l.kt)("br",null),"To remove the topic-level schema compatibility check strategy, use one of the following methods.",(0,l.kt)(i.Z,{defaultValue:"Admin CLI",values:[{label:"Admin CLI",value:"Admin CLI"},{label:"REST API",value:"REST API"},{label:"Java Admin API",value:"Java Admin API"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"Admin CLI",mdxType:"TabItem"},(0,l.kt)("p",null,"Use the ",(0,l.kt)("a",{parentName:"p",href:"https://pulsar.apache.org/tools/pulsar-admin/"},(0,l.kt)("inlineCode",{parentName:"a"},"pulsar-admin topicPolicies remove-schema-compatibility-strategy"))," command."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"\npulsar-admin topicPolicies remove-schema-compatibility-strategy <topicName>\n\n"))),(0,l.kt)(r.Z,{value:"REST API",mdxType:"TabItem"},(0,l.kt)("p",null,"Send a ",(0,l.kt)("inlineCode",{parentName:"p"},"DELETE")," request to this endpoint: ",(0,l.kt)("a",{parentName:"p",href:"https://pulsar.apache.org/admin-rest-api?version=2.5.2&apiversion=v2#operation/schemaCompatibilityStrategy"},"DELETE /admin/v2/topics/:tenant/:namespace/:topic"))),(0,l.kt)(r.Z,{value:"Java Admin API",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"\nvoid removeSchemaCompatibilityStrategy(String topic)\n\n")),(0,l.kt)("p",null,"Here is an example of removing the topic-level schema compatibility check strategy."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'\nPulsarAdmin admin = \u2026;\n\nadmin.removeSchemaCompatibilityStrategy("my-tenant/my-ns/my-topic");\n\n')))),(0,l.kt)("h3",{id:"namespace-level"},"Namespace level"),(0,l.kt)("p",null,"You can set schema compatibility check strategy at namespace level using one of the following methods."),(0,l.kt)(i.Z,{defaultValue:"Admin CLI",values:[{label:"Admin CLI",value:"Admin CLI"},{label:"REST API",value:"REST API"},{label:"Java Admin CLI",value:"Java Admin CLI"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"Admin CLI",mdxType:"TabItem"},(0,l.kt)("p",null,"Use the ",(0,l.kt)("a",{parentName:"p",href:"https://pulsar.apache.org/tools/pulsar-admin/"},(0,l.kt)("inlineCode",{parentName:"a"},"pulsar-admin namespaces set-schema-compatibility-strategy"))," command."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"\npulsar-admin namespaces set-schema-compatibility-strategy options\n\n"))),(0,l.kt)(r.Z,{value:"REST API",mdxType:"TabItem"},(0,l.kt)("p",null,"Send a ",(0,l.kt)("inlineCode",{parentName:"p"},"PUT")," request to this endpoint: ",(0,l.kt)("a",{parentName:"p",href:"https://pulsar.apache.org/admin-rest-api?version=2.5.2&apiversion=v2#operation/schemaCompatibilityStrategy"},"PUT /admin/v2/namespaces/:tenant/:namespace"))),(0,l.kt)(r.Z,{value:"Java Admin CLI",mdxType:"TabItem"},(0,l.kt)("p",null,"Use the ",(0,l.kt)("a",{parentName:"p",href:"https://pulsar.apache.org/api/admin/"},(0,l.kt)("inlineCode",{parentName:"a"},"setSchemaCompatibilityStrategy")),"method."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'\nadmin.namespaces().setSchemaCompatibilityStrategy("test", SchemaCompatibilityStrategy.FULL);\n\n')))),(0,l.kt)("h3",{id:"broker-level"},"Broker level"),(0,l.kt)("p",null,"You can set schema compatibility check strategy at broker level by setting ",(0,l.kt)("inlineCode",{parentName:"p"},"schemaCompatibilityStrategy")," in ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/apache/pulsar/blob/f24b4890c278f72a67fe30e7bf22dc36d71aac6a/conf/broker.conf#L1240"},(0,l.kt)("inlineCode",{parentName:"a"},"broker.conf"))," or ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/apache/pulsar/blob/master/conf/standalone.conf"},(0,l.kt)("inlineCode",{parentName:"a"},"standalone.conf"))," file."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\nschemaCompatibilityStrategy=ALWAYS_INCOMPATIBLE\n\n")))}h.isMDXComponent=!0},14175:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/schema-consumer-436361129cf2d37ee3764960fb377789.png"},42529:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/schema-producer-2682d94503cecdc1dd96dd54bbca105d.png"}}]);