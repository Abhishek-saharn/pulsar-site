"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[61584],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>c});var a=n(67294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,l=function(t,e){if(null==t)return{};var n,a,l={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var d=a.createContext({}),s=function(t){var e=a.useContext(d),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=s(t.components);return a.createElement(d.Provider,{value:e},t.children)},u="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var n=t.components,l=t.mdxType,r=t.originalType,d=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),u=s(n),k=l,c=u["".concat(d,".").concat(k)]||u[k]||m[k]||r;return n?a.createElement(c,i(i({ref:e},p),{},{components:n})):a.createElement(c,i({ref:e},p))}));function c(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=n.length,i=new Array(r);i[0]=k;var o={};for(var d in e)hasOwnProperty.call(e,d)&&(o[d]=e[d]);o.originalType=t,o[u]="string"==typeof t?t:l,i[1]=o;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},54322:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var a=n(87462),l=(n(67294),n(3905));const r={id:"client-libraries-java-configs",title:"Java client configs",sidebar_label:"Java client"},i=void 0,o={unversionedId:"client-libraries-java-configs",id:"client-libraries-java-configs",title:"Java client configs",description:"Client configs",source:"@site/docs/client-libraries-java-configs.md",sourceDirName:".",slug:"/client-libraries-java-configs",permalink:"/docs/next/client-libraries-java-configs",draft:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/docs/client-libraries-java-configs.md",tags:[],version:"current",frontMatter:{id:"client-libraries-java-configs",title:"Java client configs",sidebar_label:"Java client"},sidebar:"docsSidebar",previous:{title:"Configure cluster-level failover",permalink:"/docs/next/client-libraries-cluster-level-failover"},next:{title:"C++ client",permalink:"/docs/next/client-libraries-cpp-configs"}},d={},s=[{value:"Client configs",id:"client-configs",level:2},{value:"Producer configs",id:"producer-configs",level:2},{value:"Consumer configs",id:"consumer-configs",level:2},{value:"Reader configs",id:"reader-configs",level:2},{value:"Client memory allocator configs",id:"client-memory-allocator-configs",level:2}],p={toc:s},u="wrapper";function m(t){let{components:e,...n}=t;return(0,l.kt)(u,(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"client-configs"},"Client configs"),(0,l.kt)("p",null,"If you create a Java client, you can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"loadConf")," configuration. The following parameters are available in ",(0,l.kt)("inlineCode",{parentName:"p"},"loadConf"),"."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"serviceUrl")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Service URL provider for Pulsar service"),(0,l.kt)("td",{parentName:"tr",align:null},"None")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"authPluginClassName")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the authentication plugin"),(0,l.kt)("td",{parentName:"tr",align:null},"None")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"authParams")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Parameters for the authentication plugin ",(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("strong",{parentName:"td"},"Example"),(0,l.kt)("br",null)," key1:val1,key2:val2"),(0,l.kt)("td",{parentName:"tr",align:null},"None")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"operationTimeoutMs")),(0,l.kt)("td",{parentName:"tr",align:null},"long"),(0,l.kt)("td",{parentName:"tr",align:null},"Operation timeout"),(0,l.kt)("td",{parentName:"tr",align:null},"30000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"statsIntervalSeconds")),(0,l.kt)("td",{parentName:"tr",align:null},"long"),(0,l.kt)("td",{parentName:"tr",align:null},"Interval between each stats information",(0,l.kt)("br",null),(0,l.kt)("br",null),"Stats is activated with positive ",(0,l.kt)("inlineCode",{parentName:"td"},"statsInterval"),(0,l.kt)("br",null),(0,l.kt)("br",null),"Set ",(0,l.kt)("inlineCode",{parentName:"td"},"statsIntervalSeconds")," to 1 second at least."),(0,l.kt)("td",{parentName:"tr",align:null},"60")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"numIoThreads")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of threads used for handling connections to brokers"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"numListenerThreads")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},'The number of threads used for handling message listeners. The listener thread pool is shared across all the consumers and readers using the "listener" model to get messages. For a given consumer, the listener is always invoked from the same thread to ensure ordering. If you want multiple threads to process a single topic, you need to create a ',(0,l.kt)("a",{parentName:"td",href:"/docs/next/concepts-messaging#shared"},(0,l.kt)("inlineCode",{parentName:"a"},"shared"))," subscription and multiple consumers for this subscription. This does not ensure ordering."),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"useTcpNoDelay")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to use TCP no-delay flag on the connection to disable Nagle algorithm"),(0,l.kt)("td",{parentName:"tr",align:null},"true")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"enableTls")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to use TLS encryption on the connection. Note that this parameter is ",(0,l.kt)("strong",{parentName:"td"},"deprecated"),". If you want to enable TLS, use ",(0,l.kt)("inlineCode",{parentName:"td"},"pulsar+ssl://")," in ",(0,l.kt)("inlineCode",{parentName:"td"},"serviceUrl")," instead."),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tlsTrustCertsFilePath")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Path to the trusted TLS certificate file"),(0,l.kt)("td",{parentName:"tr",align:null},"None")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tlsAllowInsecureConnection")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether the Pulsar client accepts untrusted TLS certificate from broker"),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tlsHostnameVerificationEnable")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to enable TLS hostname verification"),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"concurrentLookupRequest")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of concurrent lookup requests allowed to send on each broker connection to prevent overload on broker"),(0,l.kt)("td",{parentName:"tr",align:null},"5000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"maxLookupRequest")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"The maximum number of lookup requests allowed on each broker connection to prevent overload on broker"),(0,l.kt)("td",{parentName:"tr",align:null},"50000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"maxNumberOfRejectedRequestPerConnection")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"The maximum number of rejected requests of a broker in a certain time frame (60 seconds) after the current connection is closed and the client creates a new connection to connect to a different broker"),(0,l.kt)("td",{parentName:"tr",align:null},"50")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"keepAliveIntervalSeconds")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"Seconds of keeping alive interval for each client broker connection"),(0,l.kt)("td",{parentName:"tr",align:null},"30")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"connectionTimeoutMs")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"Duration of waiting for a connection to a broker to be established ",(0,l.kt)("br",null),(0,l.kt)("br",null),"If the duration passes without a response from a broker, the connection attempt is dropped"),(0,l.kt)("td",{parentName:"tr",align:null},"10000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"requestTimeoutMs")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"Maximum duration for completing a request"),(0,l.kt)("td",{parentName:"tr",align:null},"60000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"defaultBackoffIntervalNanos")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"Default duration for a backoff interval"),(0,l.kt)("td",{parentName:"tr",align:null},"TimeUnit.MILLISECONDS.toNanos(100);")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"maxBackoffIntervalNanos")),(0,l.kt)("td",{parentName:"tr",align:null},"long"),(0,l.kt)("td",{parentName:"tr",align:null},"Maximum duration for a backoff interval"),(0,l.kt)("td",{parentName:"tr",align:null},"TimeUnit.SECONDS.toNanos(30)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"socks5ProxyAddress")),(0,l.kt)("td",{parentName:"tr",align:null},"SocketAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"SOCKS5 proxy address"),(0,l.kt)("td",{parentName:"tr",align:null},"None")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"socks5ProxyUsername")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"SOCKS5 proxy username"),(0,l.kt)("td",{parentName:"tr",align:null},"None")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"socks5ProxyPassword")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"SOCKS5 proxy password"),(0,l.kt)("td",{parentName:"tr",align:null},"None")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"connectionMaxIdleSeconds")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"Release the connection if it is not used for more than ",(0,l.kt)("inlineCode",{parentName:"td"},"connectionMaxIdleSeconds")," seconds.If ",(0,l.kt)("inlineCode",{parentName:"td"},"connectionMaxIdleSeconds")," < 0, disabled the feature that auto release the idle connection"),(0,l.kt)("td",{parentName:"tr",align:null},"180")))),(0,l.kt)("p",null,"In addition to client-level configuration, you can also apply ",(0,l.kt)("a",{parentName:"p",href:"#producer-configs"},"producer")," and ",(0,l.kt)("a",{parentName:"p",href:"#consumer-configs"},"consumer")," specific configurations."),(0,l.kt)("p",null,"For a full list of configurable parameters, check out the Javadoc for the ",(0,l.kt)("a",{parentName:"p",href:"https://pulsar.apache.org/api/client/2.11.x/org/apache/pulsar/client/api/PulsarClient"},"PulsarClient")," class."),(0,l.kt)("h2",{id:"producer-configs"},"Producer configs"),(0,l.kt)("p",null,"If you instantiate a ",(0,l.kt)("inlineCode",{parentName:"p"},"Producer")," object by specifying only a topic name as the example above, the default configuration of producer is used."),(0,l.kt)("p",null,"If you create a producer, you can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"loadConf")," configuration. The following parameters are available in ",(0,l.kt)("inlineCode",{parentName:"p"},"loadConf"),"."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"topicName")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Topic name"),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"producerName")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Producer name"),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"sendTimeoutMs")),(0,l.kt)("td",{parentName:"tr",align:null},"long"),(0,l.kt)("td",{parentName:"tr",align:null},"Message send timeout in ms.",(0,l.kt)("br",null),"If a message is not acknowledged by a server before the ",(0,l.kt)("inlineCode",{parentName:"td"},"sendTimeout")," expires, an error occurs."),(0,l.kt)("td",{parentName:"tr",align:null},"30000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"blockIfQueueFull")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"If it is set to ",(0,l.kt)("inlineCode",{parentName:"td"},"true"),", when the outgoing message queue is full, the ",(0,l.kt)("inlineCode",{parentName:"td"},"Send")," and ",(0,l.kt)("inlineCode",{parentName:"td"},"SendAsync")," methods of producer block, rather than failing and throwing errors. ",(0,l.kt)("br",null),"If it is set to ",(0,l.kt)("inlineCode",{parentName:"td"},"false"),", when the outgoing message queue is full, the ",(0,l.kt)("inlineCode",{parentName:"td"},"Send")," and ",(0,l.kt)("inlineCode",{parentName:"td"},"SendAsync")," methods of producer fail and ",(0,l.kt)("inlineCode",{parentName:"td"},"ProducerQueueIsFullError")," exceptions occur.",(0,l.kt)("br",null),(0,l.kt)("br",null),"The ",(0,l.kt)("inlineCode",{parentName:"td"},"MaxPendingMessages")," parameter determines the size of the outgoing message queue."),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"maxPendingMessages")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"The maximum size of a queue holding pending messages.",(0,l.kt)("br",null),(0,l.kt)("br",null),"For example, a message waiting to receive an acknowledgment from a ",(0,l.kt)("a",{parentName:"td",href:"/docs/next/reference-terminology#broker"},"broker"),". ",(0,l.kt)("br",null),(0,l.kt)("br",null),"By default, when the queue is full, all calls to the ",(0,l.kt)("inlineCode",{parentName:"td"},"Send")," and ",(0,l.kt)("inlineCode",{parentName:"td"},"SendAsync")," methods fail ",(0,l.kt)("strong",{parentName:"td"},"unless")," you set ",(0,l.kt)("inlineCode",{parentName:"td"},"BlockIfQueueFull")," to ",(0,l.kt)("inlineCode",{parentName:"td"},"true"),"."),(0,l.kt)("td",{parentName:"tr",align:null},"1000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"maxPendingMessagesAcrossPartitions")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"Deprecated, use ",(0,l.kt)("inlineCode",{parentName:"td"},"memoryLimit")," instead. The maximum number of pending messages across partitions. ",(0,l.kt)("br",null),(0,l.kt)("br",null),"Use the setting to lower the max pending messages for each partition ({@link #setMaxPendingMessages(int)}) if the total number exceeds the configured value and maxPendingMessagesAcrossPartitions needs to be >= maxPendingMessages."),(0,l.kt)("td",{parentName:"tr",align:null},"50000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"messageRoutingMode")),(0,l.kt)("td",{parentName:"tr",align:null},"MessageRoutingMode"),(0,l.kt)("td",{parentName:"tr",align:null},"Message routing logic for producers on ",(0,l.kt)("a",{parentName:"td",href:"/docs/next/concepts-messaging#partitioned-topics"},"partitioned topics"),".",(0,l.kt)("br",null)," Apply the logic only when setting no key on messages. ",(0,l.kt)("br",null),"Available options are as follows: ",(0,l.kt)("br",null),(0,l.kt)("li",null,(0,l.kt)("inlineCode",{parentName:"td"},"pulsar.RoundRobinDistribution"),": round robin"),(0,l.kt)("li",null,(0,l.kt)("inlineCode",{parentName:"td"},"pulsar.UseSinglePartition"),": publish all messages to a single partition"),(0,l.kt)("li",null,(0,l.kt)("inlineCode",{parentName:"td"},"pulsar.CustomPartition"),": a custom partitioning scheme")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("li",null,(0,l.kt)("inlineCode",{parentName:"td"},"pulsar.RoundRobinDistribution")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"hashingScheme")),(0,l.kt)("td",{parentName:"tr",align:null},"HashingScheme"),(0,l.kt)("td",{parentName:"tr",align:null},"Hashing function determining the partition where you publish a particular message (",(0,l.kt)("strong",{parentName:"td"},"partitioned topics only"),").",(0,l.kt)("br",null),"Available options are as follows:",(0,l.kt)("br",null),(0,l.kt)("li",null," ",(0,l.kt)("inlineCode",{parentName:"td"},"pulsar.JavastringHash"),": the equivalent of ",(0,l.kt)("inlineCode",{parentName:"td"},"string.hashCode()")," in Java"),(0,l.kt)("li",null," ",(0,l.kt)("inlineCode",{parentName:"td"},"pulsar.Murmur3_32Hash"),": applies the ",(0,l.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/MurmurHash"},"Murmur3")," hashing function"),(0,l.kt)("li",null,(0,l.kt)("inlineCode",{parentName:"td"},"pulsar.BoostHash"),": applies the hashing function from C++'s ",(0,l.kt)("a",{parentName:"td",href:"https://www.boost.org/doc/libs/1_62_0/doc/html/hash.html"},"Boost")," library")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"HashingScheme.JavastringHash"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"cryptoFailureAction")),(0,l.kt)("td",{parentName:"tr",align:null},"ProducerCryptoFailureAction"),(0,l.kt)("td",{parentName:"tr",align:null},"Producer should take action when encryption fails.",(0,l.kt)("br",null),(0,l.kt)("li",null,(0,l.kt)("strong",{parentName:"td"},"FAIL"),": if encryption fails, unencrypted messages fail to send."),(0,l.kt)("li",null," ",(0,l.kt)("strong",{parentName:"td"},"SEND"),": if encryption fails, unencrypted messages are sent.")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ProducerCryptoFailureAction.FAIL"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"batchingMaxPublishDelayMicros")),(0,l.kt)("td",{parentName:"tr",align:null},"long"),(0,l.kt)("td",{parentName:"tr",align:null},"Batching time period of sending messages."),(0,l.kt)("td",{parentName:"tr",align:null},"TimeUnit.MILLISECONDS.toMicros(1)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"batchingMaxMessages")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"The maximum number of messages permitted in a batch."),(0,l.kt)("td",{parentName:"tr",align:null},"1000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"batchingEnabled")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"Enable batching of messages."),(0,l.kt)("td",{parentName:"tr",align:null},"true")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"chunkingEnabled")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"Enable chunking of messages."),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"compressionType")),(0,l.kt)("td",{parentName:"tr",align:null},"CompressionType"),(0,l.kt)("td",{parentName:"tr",align:null},"Message data compression type used by a producer. ",(0,l.kt)("br",null),"Available options:",(0,l.kt)("li",null,(0,l.kt)("a",{parentName:"td",href:"https://github.com/lz4/lz4"},(0,l.kt)("inlineCode",{parentName:"a"},"LZ4"))),(0,l.kt)("li",null,(0,l.kt)("a",{parentName:"td",href:"https://zlib.net/"},(0,l.kt)("inlineCode",{parentName:"a"},"ZLIB")),(0,l.kt)("br",null)),(0,l.kt)("li",null,(0,l.kt)("a",{parentName:"td",href:"https://facebook.github.io/zstd/"},(0,l.kt)("inlineCode",{parentName:"a"},"ZSTD"))),(0,l.kt)("li",null,(0,l.kt)("a",{parentName:"td",href:"https://google.github.io/snappy/"},(0,l.kt)("inlineCode",{parentName:"a"},"SNAPPY")))),(0,l.kt)("td",{parentName:"tr",align:null},"No compression")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"initialSubscriptionName")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Use this configuration to automatically create an initial subscription when creating a topic. If this field is not set, the initial subscription is not created."),(0,l.kt)("td",{parentName:"tr",align:null},"null")))),(0,l.kt)("p",null,"You can configure parameters if you do not want to use the default configuration."),(0,l.kt)("p",null,"For a full list, see the Javadoc for the ",(0,l.kt)("a",{parentName:"p",href:"https://pulsar.apache.org/api/client/org/apache/pulsar/client/api/ProducerBuilder"},"ProducerBuilder")," class. The following is an example."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'Producer<byte[]> producer = client.newProducer()\n    .topic("my-topic")\n    .batchingMaxPublishDelay(10, TimeUnit.MILLISECONDS)\n    .sendTimeout(10, TimeUnit.SECONDS)\n    .blockIfQueueFull(true)\n    .create();\n')),(0,l.kt)("h2",{id:"consumer-configs"},"Consumer configs"),(0,l.kt)("p",null,"If you instantiate a ",(0,l.kt)("inlineCode",{parentName:"p"},"Consumer")," object by specifying only a topic and subscription name as in the example above, the consumer uses the default configuration."),(0,l.kt)("p",null,"When you create a consumer, you can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"loadConf")," configuration. The following parameters are available in ",(0,l.kt)("inlineCode",{parentName:"p"},"loadConf"),"."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"topicNames")),(0,l.kt)("td",{parentName:"tr",align:null},"Set","<","String",">"),(0,l.kt)("td",{parentName:"tr",align:null},"Topic name"),(0,l.kt)("td",{parentName:"tr",align:null},"Sets.newTreeSet()")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"topicsPattern")),(0,l.kt)("td",{parentName:"tr",align:null},"Pattern"),(0,l.kt)("td",{parentName:"tr",align:null},"Topic pattern"),(0,l.kt)("td",{parentName:"tr",align:null},"None")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"subscriptionName")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Subscription name"),(0,l.kt)("td",{parentName:"tr",align:null},"None")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"subscriptionType")),(0,l.kt)("td",{parentName:"tr",align:null},"SubscriptionType"),(0,l.kt)("td",{parentName:"tr",align:null},"Subscription type ",(0,l.kt)("br",null)," Four subscription types are available:",(0,l.kt)("li",null,"Exclusive"),(0,l.kt)("li",null,"Failover"),(0,l.kt)("li",null,"Shared"),(0,l.kt)("li",null,"Key_Shared")),(0,l.kt)("td",{parentName:"tr",align:null},"SubscriptionType.Exclusive")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"receiverQueueSize")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"Size of a consumer's receiver queue. ",(0,l.kt)("br",null),(0,l.kt)("br",null),"For example, the number of messages accumulated by a consumer before an application calls ",(0,l.kt)("inlineCode",{parentName:"td"},"Receive"),". ",(0,l.kt)("br",null),(0,l.kt)("br",null),"A value higher than the default value increases consumer throughput, though at the expense of more memory utilization."),(0,l.kt)("td",{parentName:"tr",align:null},"1000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"acknowledgementsGroupTimeMicros")),(0,l.kt)("td",{parentName:"tr",align:null},"long"),(0,l.kt)("td",{parentName:"tr",align:null},"Group a consumer acknowledgment for a specified time.",(0,l.kt)("br",null),(0,l.kt)("br",null),"By default, a consumer uses 100ms grouping time to send out acknowledgments to a broker.",(0,l.kt)("br",null),(0,l.kt)("br",null),"Setting a group time of 0 sends out acknowledgments immediately. ",(0,l.kt)("br",null),(0,l.kt)("br",null),"A longer ack group time is more efficient at the expense of a slight increase in message re-deliveries after a failure."),(0,l.kt)("td",{parentName:"tr",align:null},"TimeUnit.MILLISECONDS.toMicros(100)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"negativeAckRedeliveryDelayMicros")),(0,l.kt)("td",{parentName:"tr",align:null},"long"),(0,l.kt)("td",{parentName:"tr",align:null},"Delay to wait before redelivering messages that failed to be processed.",(0,l.kt)("br",null),(0,l.kt)("br",null)," When an application uses {@link Consumer#negativeAcknowledge(Message)}, failed messages are redelivered after a fixed timeout."),(0,l.kt)("td",{parentName:"tr",align:null},"TimeUnit.MINUTES.toMicros(1)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"maxTotalReceiverQueueSizeAcrossPartitions")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"The max total receiver queue size across partitions.",(0,l.kt)("br",null),(0,l.kt)("br",null),"This setting reduces the receiver queue size for individual partitions if the total receiver queue size exceeds this value."),(0,l.kt)("td",{parentName:"tr",align:null},"50000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"consumerName")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Consumer name"),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ackTimeoutMillis")),(0,l.kt)("td",{parentName:"tr",align:null},"long"),(0,l.kt)("td",{parentName:"tr",align:null},"Timeout of unacked messages"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tickDurationMillis")),(0,l.kt)("td",{parentName:"tr",align:null},"long"),(0,l.kt)("td",{parentName:"tr",align:null},"Granularity of the ack-timeout redelivery.",(0,l.kt)("br",null),(0,l.kt)("br",null),"Using an higher ",(0,l.kt)("inlineCode",{parentName:"td"},"tickDurationMillis")," reduces the memory overhead to track messages when setting ack-timeout to a bigger value (for example, 1 hour)."),(0,l.kt)("td",{parentName:"tr",align:null},"1000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"priorityLevel")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"Priority level for a consumer to which a broker gives more priority while dispatching messages in Shared subscription type. It can be set at the consumer level so all topics being consumed will have the same priority level or each topic being consumed can be given a different priority level.",(0,l.kt)("br",null),(0,l.kt)("br",null),"The broker follows descending priorities. For example, 0=max-priority, 1, 2,...",(0,l.kt)("br",null),(0,l.kt)("br",null),"In Shared subscription type, the broker ",(0,l.kt)("strong",{parentName:"td"},"first dispatches messages to the max priority level consumers if they have permits"),". Otherwise, the broker considers next priority level consumers.",(0,l.kt)("br",null),(0,l.kt)("br",null)," ",(0,l.kt)("strong",{parentName:"td"},"Example 1"),(0,l.kt)("br",null),"If a subscription has consumerA with ",(0,l.kt)("inlineCode",{parentName:"td"},"priorityLevel")," 0 and consumerB with ",(0,l.kt)("inlineCode",{parentName:"td"},"priorityLevel")," 1, then the broker ",(0,l.kt)("strong",{parentName:"td"},"only dispatches messages to consumerA until it runs out permits")," and then starts dispatching messages to consumerB.",(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("strong",{parentName:"td"},"Example 2"),(0,l.kt)("br",null),"Consumer Priority, Level, Permits",(0,l.kt)("br",null),"C1, 0, 2",(0,l.kt)("br",null),"C2, 0, 1",(0,l.kt)("br",null),"C3, 0, 1",(0,l.kt)("br",null),"C4, 1, 2",(0,l.kt)("br",null),"C5, 1, 1",(0,l.kt)("br",null),(0,l.kt)("br",null),"Order in which a broker dispatches messages to consumers is: C1, C2, C3, C1, C4, C5, C4."),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"cryptoFailureAction")),(0,l.kt)("td",{parentName:"tr",align:null},"ConsumerCryptoFailureAction"),(0,l.kt)("td",{parentName:"tr",align:null},"Consumer should take action when it receives a message that can not be decrypted.",(0,l.kt)("br",null),(0,l.kt)("li",null,(0,l.kt)("strong",{parentName:"td"},"FAIL"),": this is the default option to fail messages until crypto succeeds."),(0,l.kt)("li",null," ",(0,l.kt)("strong",{parentName:"td"},"DISCARD"),":silently acknowledge and not deliver message to an application."),(0,l.kt)("li",null,(0,l.kt)("strong",{parentName:"td"},"CONSUME"),": deliver encrypted messages to applications. It is the application's responsibility to decrypt the message."),(0,l.kt)("br",null),"The decompression of message fails. ",(0,l.kt)("br",null),(0,l.kt)("br",null),"If messages contain batch messages, a client is not be able to retrieve individual messages in batch.",(0,l.kt)("br",null),(0,l.kt)("br",null),"Delivered encrypted message contains {@link EncryptionContext} which contains encryption and compression information in it using which application can decrypt consumed message payload."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("li",null,"ConsumerCryptoFailureAction.FAIL"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"properties")),(0,l.kt)("td",{parentName:"tr",align:null},"SortedMap<String, String>"),(0,l.kt)("td",{parentName:"tr",align:null},"A name or value property of this consumer.",(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"properties")," is application defined metadata attached to a consumer. ",(0,l.kt)("br",null),(0,l.kt)("br",null),"When getting a topic stats, associate this metadata with the consumer stats for easier identification."),(0,l.kt)("td",{parentName:"tr",align:null},"new TreeMap()")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"readCompacted")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"If enabling ",(0,l.kt)("inlineCode",{parentName:"td"},"readCompacted"),", a consumer reads messages from a compacted topic rather than reading a full message backlog of a topic.",(0,l.kt)("br",null),(0,l.kt)("br",null)," A consumer only sees the latest value for each key in the compacted topic, up until reaching the point in the topic message when compacting backlog. Beyond that point, send messages as normal.",(0,l.kt)("br",null),(0,l.kt)("br",null),"Only enabling ",(0,l.kt)("inlineCode",{parentName:"td"},"readCompacted")," on subscriptions to persistent topics, which have a single active consumer (like failure or exclusive subscriptions). ",(0,l.kt)("br",null),(0,l.kt)("br",null),"Attempting to enable it on subscriptions to non-persistent topics or on shared subscriptions leads to a subscription call throwing a ",(0,l.kt)("inlineCode",{parentName:"td"},"PulsarClientException"),"."),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"subscriptionInitialPosition")),(0,l.kt)("td",{parentName:"tr",align:null},"SubscriptionInitialPosition"),(0,l.kt)("td",{parentName:"tr",align:null},"Initial position at which to set cursor when subscribing to a topic at first time."),(0,l.kt)("td",{parentName:"tr",align:null},"SubscriptionInitialPosition.Latest")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"patternAutoDiscoveryPeriod")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"Topic auto discovery period when using a pattern for topic's consumer.",(0,l.kt)("br",null),(0,l.kt)("br",null),"The default and minimum value is 1 minute."),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"regexSubscriptionMode")),(0,l.kt)("td",{parentName:"tr",align:null},"RegexSubscriptionMode"),(0,l.kt)("td",{parentName:"tr",align:null},"When subscribing to a topic using a regular expression, you can pick a certain type of topics.",(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("li",null,(0,l.kt)("strong",{parentName:"td"},"PersistentOnly"),": only subscribe to persistent topics."),(0,l.kt)("li",null,(0,l.kt)("strong",{parentName:"td"},"NonPersistentOnly"),": only subscribe to non-persistent topics."),(0,l.kt)("li",null,(0,l.kt)("strong",{parentName:"td"},"AllTopics"),": subscribe to both persistent and non-persistent topics.")),(0,l.kt)("td",{parentName:"tr",align:null},"RegexSubscriptionMode.PersistentOnly")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"deadLetterPolicy")),(0,l.kt)("td",{parentName:"tr",align:null},"DeadLetterPolicy"),(0,l.kt)("td",{parentName:"tr",align:null},"Dead letter policy for consumers.",(0,l.kt)("br",null),(0,l.kt)("br",null),"By default, some messages are probably redelivered many times, even to the extent that it never stops.",(0,l.kt)("br",null),(0,l.kt)("br",null),"By using the dead letter mechanism, messages have the max redelivery count. ",(0,l.kt)("strong",{parentName:"td"},"When exceeding the maximum number of redeliveries, messages are sent to the Dead Letter Topic and acknowledged automatically"),".",(0,l.kt)("br",null),(0,l.kt)("br",null),"You can enable the dead letter mechanism by setting ",(0,l.kt)("inlineCode",{parentName:"td"},"deadLetterPolicy"),".",(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("strong",{parentName:"td"},"Example"),(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("code",null,"client.newConsumer()",(0,l.kt)("br",null),".deadLetterPolicy(DeadLetterPolicy.builder().maxRedeliverCount(10).build())",(0,l.kt)("br",null),".subscribe();"),(0,l.kt)("br",null),(0,l.kt)("br",null),"Default dead letter topic name is ",(0,l.kt)("inlineCode",{parentName:"td"},"{TopicName}-{Subscription}-DLQ"),".",(0,l.kt)("br",null),(0,l.kt)("br",null),"To set a custom dead letter topic name:",(0,l.kt)("br",null),(0,l.kt)("code",null,"client.newConsumer()",(0,l.kt)("br",null),".deadLetterPolicy(DeadLetterPolicy.builder().maxRedeliverCount(10)",(0,l.kt)("br",null),'.deadLetterTopic("your-topic-name").build())',(0,l.kt)("br",null),".subscribe();"),(0,l.kt)("br",null),(0,l.kt)("br",null),"When specifying the dead letter policy while not specifying ",(0,l.kt)("inlineCode",{parentName:"td"},"ackTimeoutMillis"),", you can set the ack timeout to 30000 millisecond."),(0,l.kt)("td",{parentName:"tr",align:null},"None")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"autoUpdatePartitions")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"If ",(0,l.kt)("inlineCode",{parentName:"td"},"autoUpdatePartitions")," is enabled, a consumer subscribes to partition increasement automatically.",(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("strong",{parentName:"td"},"Note"),": this is only for partitioned consumers."),(0,l.kt)("td",{parentName:"tr",align:null},"true")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"replicateSubscriptionState")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"If ",(0,l.kt)("inlineCode",{parentName:"td"},"replicateSubscriptionState")," is enabled, a subscription state is replicated to geo-replicated clusters."),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"negativeAckRedeliveryBackoff")),(0,l.kt)("td",{parentName:"tr",align:null},"RedeliveryBackoff"),(0,l.kt)("td",{parentName:"tr",align:null},"Interface for custom message is negativeAcked policy. You can specify ",(0,l.kt)("inlineCode",{parentName:"td"},"RedeliveryBackoff")," for a consumer."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"MultiplierRedeliveryBackoff"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ackTimeoutRedeliveryBackoff")),(0,l.kt)("td",{parentName:"tr",align:null},"RedeliveryBackoff"),(0,l.kt)("td",{parentName:"tr",align:null},"Interface for custom message is ackTimeout policy. You can specify ",(0,l.kt)("inlineCode",{parentName:"td"},"RedeliveryBackoff")," for a consumer."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"MultiplierRedeliveryBackoff"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"autoAckOldestChunkedMessageOnQueueFull")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to automatically acknowledge pending chunked messages when the threashold of ",(0,l.kt)("inlineCode",{parentName:"td"},"maxPendingChunkedMessage")," is reached. If set to ",(0,l.kt)("inlineCode",{parentName:"td"},"false"),", these messages will be redelivered by their broker."),(0,l.kt)("td",{parentName:"tr",align:null},"true")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"maxPendingChunkedMessage")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"The maximum size of a queue holding pending chunked messages. When the threshold is reached, the consumer drops pending messages to optimize memory utilization."),(0,l.kt)("td",{parentName:"tr",align:null},"10")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"expireTimeOfIncompleteChunkedMessageMillis")),(0,l.kt)("td",{parentName:"tr",align:null},"long"),(0,l.kt)("td",{parentName:"tr",align:null},"The time interval to expire incomplete chunks if a consumer fails to receive all the chunks in the specified time period. The default value is 1 minute."),(0,l.kt)("td",{parentName:"tr",align:null},"60000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ackReceiptEnabled")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"If ",(0,l.kt)("inlineCode",{parentName:"td"},"ackReceiptEnabled")," is enabled, ACK returns a receipt. The client got the ack receipt means the broker has processed the ack request, but if without transaction, the broker does not guarantee persistence of acknowledgments, which means the messages still have a chance to be redelivered after the broker crashes. With the transaction, the client can only get the receipt after the acknowledgments have been persistent."),(0,l.kt)("td",{parentName:"tr",align:null},"false")))),(0,l.kt)("p",null,"You can configure parameters if you do not want to use the default configuration. For a full list, see the Javadoc for the ",(0,l.kt)("a",{parentName:"p",href:"https://pulsar.apache.org/api/client/org/apache/pulsar/client/api/ConsumerBuilder"},"ConsumerBuilder")," class."),(0,l.kt)("p",null,"The following is an example."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'Consumer consumer = client.newConsumer()\n        .topic("my-topic")\n        .subscriptionName("my-subscription")\n        .ackTimeout(10, TimeUnit.SECONDS)\n        .subscriptionType(SubscriptionType.Exclusive)\n        .subscribe();\n')),(0,l.kt)("h2",{id:"reader-configs"},"Reader configs"),(0,l.kt)("p",null,"When you create a reader, you can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"loadConf")," configuration. The following parameters are available in ",(0,l.kt)("inlineCode",{parentName:"p"},"loadConf"),"."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"topicName")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Topic name."),(0,l.kt)("td",{parentName:"tr",align:null},"None")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"receiverQueueSize")),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"Size of a consumer's receiver queue.",(0,l.kt)("br",null),(0,l.kt)("br",null),"For example, the number of messages that can be accumulated by a consumer before an application calls ",(0,l.kt)("inlineCode",{parentName:"td"},"Receive"),".",(0,l.kt)("br",null),(0,l.kt)("br",null),"A value higher than the default value increases consumer throughput, though at the expense of more memory utilization."),(0,l.kt)("td",{parentName:"tr",align:null},"1000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"readerListener")),(0,l.kt)("td",{parentName:"tr",align:null},"ReaderListener","<","T",">"),(0,l.kt)("td",{parentName:"tr",align:null},"A listener that is called for message received."),(0,l.kt)("td",{parentName:"tr",align:null},"None")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"readerName")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Reader name."),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"subscriptionName")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Subscription name"),(0,l.kt)("td",{parentName:"tr",align:null},"When there is a single topic, the default subscription name is ",(0,l.kt)("inlineCode",{parentName:"td"},'"reader-" + 10-digit UUID'),".",(0,l.kt)("br",null),"When there are multiple topics, the default subscription name is ",(0,l.kt)("inlineCode",{parentName:"td"},'"multiTopicsReader-" + 10-digit UUID'),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"subscriptionRolePrefix")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Prefix of subscription role."),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"cryptoKeyReader")),(0,l.kt)("td",{parentName:"tr",align:null},"CryptoKeyReader"),(0,l.kt)("td",{parentName:"tr",align:null},"Interface that abstracts the access to a key store."),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"cryptoFailureAction")),(0,l.kt)("td",{parentName:"tr",align:null},"ConsumerCryptoFailureAction"),(0,l.kt)("td",{parentName:"tr",align:null},"Consumer should take action when it receives a message that can not be decrypted.",(0,l.kt)("br",null),(0,l.kt)("li",null,(0,l.kt)("strong",{parentName:"td"},"FAIL"),": this is the default option to fail messages until crypto succeeds."),(0,l.kt)("li",null," ",(0,l.kt)("strong",{parentName:"td"},"DISCARD"),": silently acknowledge and not deliver message to an application."),(0,l.kt)("li",null,(0,l.kt)("strong",{parentName:"td"},"CONSUME"),": deliver encrypted messages to applications. It is the application's responsibility to decrypt the message."),(0,l.kt)("br",null),"The message decompression fails. ",(0,l.kt)("br",null),(0,l.kt)("br",null),"If messages contain batch messages, a client is not be able to retrieve individual messages in batch.",(0,l.kt)("br",null),(0,l.kt)("br",null),"Delivered encrypted message contains {@link EncryptionContext} which contains encryption and compression information in it using which application can decrypt consumed message payload."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("li",null,"ConsumerCryptoFailureAction.FAIL"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"readCompacted")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"If enabling ",(0,l.kt)("inlineCode",{parentName:"td"},"readCompacted"),", a consumer reads messages from a compacted topic rather than a full message backlog of a topic.",(0,l.kt)("br",null),(0,l.kt)("br",null)," A consumer only sees the latest value for each key in the compacted topic, up until reaching the point in the topic message when compacting backlog. Beyond that point, send messages as normal.",(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"readCompacted")," can only be enabled on subscriptions to persistent topics, which have a single active consumer (for example, failure or exclusive subscriptions). ",(0,l.kt)("br",null),(0,l.kt)("br",null),"Attempting to enable it on subscriptions to non-persistent topics or on shared subscriptions leads to a subscription call throwing a ",(0,l.kt)("inlineCode",{parentName:"td"},"PulsarClientException"),"."),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"resetIncludeHead")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"If set to true, the first message to be returned is the one specified by ",(0,l.kt)("inlineCode",{parentName:"td"},"messageId"),".",(0,l.kt)("br",null),(0,l.kt)("br",null),"If set to false, the first message to be returned is the one next to the message specified by ",(0,l.kt)("inlineCode",{parentName:"td"},"messageId"),"."),(0,l.kt)("td",{parentName:"tr",align:null},"false")))),(0,l.kt)("h2",{id:"client-memory-allocator-configs"},"Client memory allocator configs"),(0,l.kt)("p",null,"You can set the client memory allocator configurations through Java properties.",(0,l.kt)("br",null)),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Available values"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pulsar.allocator.pooled")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"If set to ",(0,l.kt)("inlineCode",{parentName:"td"},"true"),", the client uses a direct memory pool. ",(0,l.kt)("br",null)," If set to ",(0,l.kt)("inlineCode",{parentName:"td"},"false"),", the client uses a heap memory without pool"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("li",null," true ")," ",(0,l.kt)("li",null," false "))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pulsar.allocator.exit_on_oom")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to exit the JVM when OOM happens"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("li",null," true ")," ",(0,l.kt)("li",null," false "))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pulsar.allocator.leak_detection")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The leak detection policy for Pulsar ByteBuf allocator. ",(0,l.kt)("li",null," ",(0,l.kt)("strong",{parentName:"td"},"Disabled"),": No leak detection and no overhead. ")," ",(0,l.kt)("li",null," ",(0,l.kt)("strong",{parentName:"td"},"Simple"),": Instruments 1% of the allocated buffer to track for leaks. ")," ",(0,l.kt)("li",null," ",(0,l.kt)("strong",{parentName:"td"},"Advanced"),": Instruments 1% of the allocated buffer to track for leaks, reporting stack traces of places where the buffer is used. ")," ",(0,l.kt)("li",null," ",(0,l.kt)("strong",{parentName:"td"},"Paranoid"),": Instruments 100% of the allocated buffer to track for leaks, reporting stack traces of places where the buffer is used and introduces a significant overhead. ")),(0,l.kt)("td",{parentName:"tr",align:null},"Disabled"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("li",null," Disabled ")," ",(0,l.kt)("li",null," Simple ")," ",(0,l.kt)("li",null," Advanced ")," ",(0,l.kt)("li",null," Paranoid "))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pulsar.allocator.out_of_memory_policy")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"When an OOM occurs, the client throws an exception or fallbacks to heap"),(0,l.kt)("td",{parentName:"tr",align:null},"FallbackToHeap"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("li",null," ThrowException ")," ",(0,l.kt)("li",null," FallbackToHeap "))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-conf"},"Dpulsar.allocator.pooled=true\nDpulsar.allocator.exit_on_oom=false\nDpulsar.allocator.leak_detection=Disabled\nDpulsar.allocator.out_of_memory_policy=ThrowException\n")))}m.isMDXComponent=!0}}]);