"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[63184],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=d(a),u=r,k=p["".concat(s,".").concat(u)]||p[u]||b[u]||l;return a?n.createElement(k,o(o({ref:t},c),{},{components:a})):n.createElement(k,o({ref:t},c))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var d=2;d<l;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},81412:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>b,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var n=a(87462),r=(a(67294),a(3905));const l={id:"concepts-broker-load-balancing-types",title:"Types",sidebar_label:"Types"},o=void 0,i={unversionedId:"concepts-broker-load-balancing-types",id:"version-3.2.x/concepts-broker-load-balancing-types",title:"Types",description:"Pulsar provides three types of broker load balancers:",source:"@site/versioned_docs/version-3.2.x/concepts-broker-load-balancing-types.md",sourceDirName:".",slug:"/concepts-broker-load-balancing-types",permalink:"/docs/3.2.x/concepts-broker-load-balancing-types",draft:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-3.2.x/concepts-broker-load-balancing-types.md",tags:[],version:"3.2.x",frontMatter:{id:"concepts-broker-load-balancing-types",title:"Types",sidebar_label:"Types"},sidebar:"docsSidebar",previous:{title:"Concepts",permalink:"/docs/3.2.x/concepts-broker-load-balancing-concepts"},next:{title:"Quick start",permalink:"/docs/3.2.x/concepts-broker-load-balancing-quick-start"}},s={},d=[{value:"Side-by-side comparisons",id:"side-by-side-comparisons",level:2},{value:"Related topics",id:"related-topics",level:2}],c={toc:d},p="wrapper";function b(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Pulsar provides three types of broker load balancers:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Simple broker load balancer: it existed since Pulsar's inception, but now is deprecated.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#side-by-side-comparisons"},"Modular broker load balancer"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#side-by-side-comparisons"},"Extensible broker load balancer")))),(0,r.kt)("p",null,"The modular and extensible broker load balancer implements similar load balance functionalities with different system designs. For example, they both employ a similar approach to distributing data loads among brokers, including:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Dynamic ",(0,r.kt)("a",{parentName:"p",href:"/docs/3.2.x/concepts-broker-load-balancing-concepts#bundle-assignment"},"bundle-broker assignment"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Dynamic ",(0,r.kt)("a",{parentName:"p",href:"/docs/3.2.x/concepts-broker-load-balancing-concepts#bundle-splitting"},"bundle splitting"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Dynamic ",(0,r.kt)("a",{parentName:"p",href:"/docs/3.2.x/concepts-broker-load-balancing-concepts#bundle-unloading"},"bundle unloading (shedding)")))),(0,r.kt)("p",null,"However, for bundle ownership and load data stores, the modular load balancer uses ZooKeeper, whereas the extensible load balancer uses ",(0,r.kt)("a",{parentName:"p",href:"/docs/3.2.x/concepts-messaging#system-topic"},"System topics")," and ",(0,r.kt)("a",{parentName:"p",href:"/docs/3.2.x/concepts-clients#tableview"},"Table views"),"."),(0,r.kt)("h2",{id:"side-by-side-comparisons"},"Side-by-side comparisons"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Dimension"),(0,r.kt)("th",{parentName:"tr",align:null},"Modular broker load balancer"),(0,r.kt)("th",{parentName:"tr",align:null},"Extensible broker load balancer"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Available version"),(0,r.kt)("td",{parentName:"tr",align:null},"Pulsar 1.7.0 ",(0,r.kt)("br",null)," ",(0,r.kt)("br",null),"2017"),(0,r.kt)("td",{parentName:"tr",align:null},"Pulsar 3.0.0 ",(0,r.kt)("br",null)," ",(0,r.kt)("br",null),"2023")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Load Balance Metadata Store and Replication"),(0,r.kt)("td",{parentName:"tr",align:null},"Dependent on ZooKeeper for load balance metadata store and replication.",(0,r.kt)("br",null)," ",(0,r.kt)("br",null)," - All broker load data and all bundle load data are stored in ZooKeeper and replicated to all brokers via ZooKeeper watchers. ",(0,r.kt)("br",null),(0,r.kt)("br",null),"- All bundle ownerships are stored in ZooKeeper as ephemeral locks."),(0,r.kt)("td",{parentName:"tr",align:null},"Dependent on system topics and table views for load balance metadata store and replication. ",(0,r.kt)("br",null)," ",(0,r.kt)("br",null)," - All broker load data are stored in a non-persistent system topic and replicated to all brokers via table views. ",(0,r.kt)("br",null)," ",(0,r.kt)("br",null),"- Each broker publishes only top k bundles' load data in a non-persistent system topic, and only the leader broker consumes it via a table view. ",(0,r.kt)("br",null)," ",(0,r.kt)("br",null)," - Bundle ownerships are stored in a persistent system topic and replicated to all brokers via table views.",(0,r.kt)("br",null)," ",(0,r.kt)("br",null)," Note: The absolute size of the replicated load data and the complexity of the replication decreased due to passing the data through memory-only, non-persistent topics.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Load Balance Decision",(0,r.kt)("br",null),"(Load Balance leader dependency)"),(0,r.kt)("td",{parentName:"tr",align:null},"Single leader broker decides on bundle-broker assignment, bundle splitting, and bundle unloading. ",(0,r.kt)("br",null)," ",(0,r.kt)("br",null)," Note: The leader broker requires global load information"),(0,r.kt)("td",{parentName:"tr",align:null},"Each broker decides and runs bundle-broker assignment (lookup) and bundle splitting based on the local (replicated) information. ",(0,r.kt)("br",null),(0,r.kt)("br",null)," The leader broker still decides on bundle unloading globally.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Pub/sub reconnection upon bundle unloading"),(0,r.kt)("td",{parentName:"tr",align:null},"When bundles are unloaded, the topics in the bundles are temporarily closed, and producers and consumers connect to new owner brokers. ",(0,r.kt)("br",null)," ",(0,r.kt)("br",null)," - Connecting to the new owner brokers involves redirecting lookup requests via the leader broker."),(0,r.kt)("td",{parentName:"tr",align:null},"Any broker can respond to the lookup requests to locate the new owner brokers without asking the leader broker. The reconnection does not go through the leader broker.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Observability"),(0,r.kt)("td",{parentName:"tr",align:null},"You can monitor and analyze load balance with various ",(0,r.kt)("a",{parentName:"td",href:"/docs/3.2.x/reference-metrics"},"metrics")),(0,r.kt)("td",{parentName:"tr",align:null},"It adds additional ",(0,r.kt)("a",{parentName:"td",href:"/docs/3.2.x/reference-metrics"},"metrics")," and debug mode. For example: ",(0,r.kt)("br",null),(0,r.kt)("br",null)," - Check the status of load balance decision breakdown and failure. ",(0,r.kt)("br",null),(0,r.kt)("br",null)," - Use the dynamic debug mode configuration to dynamically turn on and off more load balance decision logs.")))),(0,r.kt)("h2",{id:"related-topics"},"Related topics"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To get a comprehensive understanding and discover the key insights, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/3.2.x/concepts-broker-load-balancing-overview"},"Broker load balancing | Overview"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To discover different usage scenarios, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/3.2.x/concepts-broker-load-balancing-use-cases"},"Broker load balancing | Use cases"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To explore functionalities, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/3.2.x/concepts-broker-load-balancing-features"},"Broker load balancing | Features"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To understand advantages, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/3.2.x/concepts-broker-load-balancing-benefits"},"Broker load balancing | Benefits"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To learn essential fundamentals, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/3.2.x/concepts-broker-load-balancing-concepts"},"Broker load balancing | Concepts"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To get up quickly, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/3.2.x/concepts-broker-load-balancing-quick-start"},"Broker load balancing | Quick start"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To migrate one broker load balancer type to another, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/3.2.x/concepts-broker-load-balancing-migration"},"Broker load balancing | Migration"),"."))))}b.isMDXComponent=!0}}]);